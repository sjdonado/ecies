/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.ecies;

import org.bouncycastle.util.encoders.Hex;

/**
 *
 * @author sjdonado
 */
public class Main extends javax.swing.JFrame {
    
    private final ECIES ecies;
    EllipticCurve ellipticCurve;
    byte[] recipientPrivateKey;

    byte[] IV = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
//        senderCipherText.setVisible(false);
        this.ecies = new ECIES();
        this.ellipticCurve = new EllipticCurve(ecies);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        recipientDecryptButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        recipientGenerateKeysButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        recipientDecryptionResultTextArea = new javax.swing.JTextArea();
        recepientPublicKeyText = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        recipientCipherTextArea = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        senderEncryptButton = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        senderCipherTextArea = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        senderRecipientPublicKeyEditText = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        senderPlainTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        recipientDecryptButton.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        recipientDecryptButton.setText("Decrypt");
        recipientDecryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recipientDecryptButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Black", 3, 18)); // NOI18N
        jLabel1.setText("RECIPIENT");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("Public key:");

        jLabel19.setFont(new java.awt.Font("Arial", 3, 15)); // NOI18N
        jLabel19.setText("Cipher text:");

        jLabel20.setFont(new java.awt.Font("Arial", 3, 15)); // NOI18N
        jLabel20.setText("Result:");

        recipientGenerateKeysButton.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        recipientGenerateKeysButton.setText("Generate keys");
        recipientGenerateKeysButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recipientGenerateKeysButtonActionPerformed(evt);
            }
        });

        recipientDecryptionResultTextArea.setEditable(false);
        recipientDecryptionResultTextArea.setColumns(20);
        recipientDecryptionResultTextArea.setLineWrap(true);
        recipientDecryptionResultTextArea.setRows(5);
        recipientDecryptionResultTextArea.setWrapStyleWord(true);
        recipientDecryptionResultTextArea.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane3.setViewportView(recipientDecryptionResultTextArea);

        recepientPublicKeyText.setEditable(false);

        recipientCipherTextArea.setColumns(20);
        recipientCipherTextArea.setLineWrap(true);
        recipientCipherTextArea.setRows(5);
        recipientCipherTextArea.setWrapStyleWord(true);
        jScrollPane2.setViewportView(recipientCipherTextArea);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(309, 309, 309)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 147, Short.MAX_VALUE)
                        .addComponent(recipientGenerateKeysButton))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(recepientPublicKeyText))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addGap(317, 317, 317))
                            .addComponent(recipientDecryptButton, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(recipientGenerateKeysButton)
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(recepientPublicKeyText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(recipientDecryptButton)
                .addGap(1, 1, 1)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Recipient", jPanel2);

        jLabel16.setFont(new java.awt.Font("Arial", 3, 15)); // NOI18N
        jLabel16.setText("Type the text to be encrypted:");

        senderEncryptButton.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        senderEncryptButton.setText("Encrypt");
        senderEncryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                senderEncryptButtonActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Arial", 3, 15)); // NOI18N
        jLabel17.setText("Cipher text:");

        senderCipherTextArea.setEditable(false);
        senderCipherTextArea.setColumns(20);
        senderCipherTextArea.setLineWrap(true);
        senderCipherTextArea.setRows(5);
        senderCipherTextArea.setWrapStyleWord(true);
        senderCipherTextArea.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(senderCipherTextArea);

        jLabel18.setFont(new java.awt.Font("Arial Black", 3, 18)); // NOI18N
        jLabel18.setText("SENDER");

        jLabel21.setFont(new java.awt.Font("Arial", 3, 15)); // NOI18N
        jLabel21.setText("Recipient Public key:");

        senderPlainTextArea.setColumns(20);
        senderPlainTextArea.setLineWrap(true);
        senderPlainTextArea.setRows(5);
        senderPlainTextArea.setWrapStyleWord(true);
        jScrollPane4.setViewportView(senderPlainTextArea);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(313, 313, 313)
                .addComponent(jLabel17)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(senderEncryptButton))
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(senderRecipientPublicKeyEditText))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(319, 319, 319)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel18)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(senderRecipientPublicKeyEditText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(senderEncryptButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Sender", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 735, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void recipientDecryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recipientDecryptButtonActionPerformed
        try {
            byte[] cipherText = Hex.decode(recipientCipherTextArea.getText());
//            byte[] test = cipherText.clone();
//            test[test.length - 1] = (byte) (~test[test.length - 1] & 0xFF);
//            System.out.println("Test: " + Hex.toHexString(test));

            byte[] receiverR = new byte[ecies.getKeySize()];
            System.arraycopy(cipherText, 0, receiverR, 0, ecies.getKeySize());

            byte[] receiverChiperText = new byte[cipherText.length - (receiverR.length + ecies.getKeySize())];
            System.arraycopy(cipherText, receiverR.length + ecies.getKeySize(), receiverChiperText, 0, cipherText.length - (receiverR.length + ecies.getKeySize()));

            byte[] receiverTag = new byte[ecies.getKeySize()];
            System.arraycopy(cipherText, ecies.getKeySize(), receiverTag, 0, ecies.getKeySize());

            byte[] decryptionPoint = ellipticCurve.decryptionPoint(receiverR, recipientPrivateKey);
            byte[] plainText = ecies.decrypt(decryptionPoint, IV, receiverChiperText, receiverTag);

            recipientDecryptionResultTextArea.setText(new String(plainText));
        } catch (Exception ex) {
            recipientDecryptionResultTextArea.setText(ex.getMessage());
        }
    }//GEN-LAST:event_recipientDecryptButtonActionPerformed

    private void senderEncryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_senderEncryptButtonActionPerformed
        byte[] recipientPublicKey = Hex.decode(senderRecipientPublicKeyEditText.getText());
        byte[] r = ecies.getRandomNumber(ecies.getKeySize());
        byte[] R = ellipticCurve.generateR(r);
        byte[] encryptionPoint = ellipticCurve.encryptionPoint(r, recipientPublicKey);
        byte[] chiperText = ecies.encrypt(encryptionPoint, IV, senderPlainTextArea.getText().getBytes());

        byte[] result = new byte[R.length + chiperText.length];
        System.arraycopy(R, 0, result, 0, R.length);
        System.arraycopy(chiperText, 0, result, R.length, chiperText.length);
        senderCipherTextArea.setText(Hex.toHexString(result));
    }//GEN-LAST:event_senderEncryptButtonActionPerformed

    private void recipientGenerateKeysButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recipientGenerateKeysButtonActionPerformed
        byte[][] recipientKeyPairs = ellipticCurve.generateKeyPair();
        recepientPublicKeyText.setText(Hex.toHexString(recipientKeyPairs[1]));
        recipientPrivateKey = recipientKeyPairs[0];
    }//GEN-LAST:event_recipientGenerateKeysButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Main jFrame = new Main();
                jFrame.setLocationRelativeTo(null);
                jFrame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField recepientPublicKeyText;
    private javax.swing.JTextArea recipientCipherTextArea;
    private javax.swing.JButton recipientDecryptButton;
    private javax.swing.JTextArea recipientDecryptionResultTextArea;
    private javax.swing.JButton recipientGenerateKeysButton;
    private javax.swing.JTextArea senderCipherTextArea;
    private javax.swing.JButton senderEncryptButton;
    private javax.swing.JTextArea senderPlainTextArea;
    private javax.swing.JTextField senderRecipientPublicKeyEditText;
    // End of variables declaration//GEN-END:variables
}
